CoreASIM client

use Standard

init Start
controlled c: INTEGER

scheduling whileRunning

policy whileRunning = skip

controlled msg: MAP

rule Start = {
	print "------------------client init"
	c := 0
	
	//prepare transaction message
	//msg := {
	//	"from" -> "client",
	//	"to" -> "somebody",
	//	"channel" -> "phone",
	//	"amount"  -> 100,
	//	"custFlds" -> ""
	//}
	
	program(self) := Program
}

rule Program = seq
	print "------------------tick: " + c	
	
	//sending ten messages
	if c>=10 and c<=20 then seq
		//print ".... sending: " + msg
		
		//send message to server
		send {
			"from" -> "client",
			"to" -> "somebody",
			"channel" -> "phone",
			"amount"  -> 100,
			"custFlds" -> c
		}  to "server" with subject "CreditReviewRequest"
		print "sent message nr " + c
	endseq
	c := c + 1
endseq
