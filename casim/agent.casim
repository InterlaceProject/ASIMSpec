CoreASIM agent

use Standard

init Start

scheduling whileRunning

policy whileRunning = skip

rule Start = {
	program(self) := Program
}

// ------------------------------------------------------------------
//
// Credit and Debit request rules
//
// ------------------------------------------------------------------
 
rule CreditReviewReq(msg, mbr) = {
	print mbr + " -> CreditReviewReq received: " + msg
}

rule CreditPerformReq(msg, mbr) = {
	print mbr + " -> CreditPerformReq received" + msg
}

rule DebitPreviewReq(msg, mbr) = {
	print mbr + " -> DebitPreviewReq received" + msg
}

rule DebitPerformReq(msg, mbr) = {
	print mbr + " -> DebitPerformReq received" + msg
}


// ------------------------------------------------------------------
rule Program = {
	print "checking inbox"

    choose m in inboxOf(self) with getMessageSubject(m)="CreditReviewRequest" do {
    	// receive messages
    	msgIn := getMessageContent(m)
    	
    	// when message received call CreditReviewRequest
    	if msgIn != undef then par
    		mbr := getMessageSender(m)
    		CreditReviewReq(msgIn, mbr)
		endpar
    }
}
