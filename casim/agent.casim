CoreASIM agent

use Standard

init Start

scheduling whileRunning

policy whileRunning = skip

rule Start = {
	program(self) := Program
}

// ------------------------------------------------------------------
//
// Credit and Debit request rules
//
// ------------------------------------------------------------------

/* ASM - Template
Symbols 	€ => element of
			!€ => not element of

CreditPreviewReq((channel, from, to, amount, custFlds), mbr) =
	if Received(CreditPreviewReq(credit, channel, from, to, amount, custFlds), from: mbr) then
		let transfer = (credit, channel, from, to, amount, custFlds)
		let ttRes = transferTypeCheck(transfer)
			if ttRes !€ TransferType then
				Send(ErrMsg(NotPermitted(transfer, ttRes)), to: mbr)
			else Send(YouMayProceedWith(transfer), to: mbr)
		Consume(CreditPreviewReq(credit, channel, from, to, amount, custFlds), from: mbr)
	where
		transferTypeCheck(transfer ) €
			{tt}							if tt € TransferType and Match(tt , transfer)
			PowerSet(TransferTypeError) 	else
		Match(tt , transfer) if
			oper(tt) = credit and chan(tt) = channel and
			owner(from) (elementof) fromMemberGroup(tt) and owner(to) (elementof) toMemberGroup(tt) and
			sourceType(tt) = accountType(from) and destType(tt) = accountType(to) and
			custFieldCond(tt, custFlds) = true

*/
rule CreditReviewReq(msg, mbr) = {
	print mbr + " -> CreditReviewReq received: " + msg
}

rule CreditPerformReq(msg, mbr) = {
	print mbr + " -> CreditPerformReq received" + msg
}

rule DebitPreviewReq(msg, mbr) = {
	print mbr + " -> DebitPreviewReq received" + msg
}

rule DebitPerformReq(msg, mbr) = {
	print mbr + " -> DebitPerformReq received" + msg
}


// ------------------------------------------------------------------
rule Program = {
	print "checking inbox"

    choose m in inboxOf(self) with getMessageSubject(m)="CreditReviewRequest" do {
    	// receive messages
    	msgIn := getMessageContent(m)
    	
    	// when message received call CreditReviewRequest
    	if msgIn != undef then par
    		mbr := getMessageSender(m)
    		CreditReviewReq(msgIn, mbr)
		endpar
    }
}
