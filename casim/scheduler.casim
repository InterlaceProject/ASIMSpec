CoreASIM scheduler

use Standard

init Start

scheduling whileRunning

// not yet clear how asim scheduling works
policy whileRunning = {
	schedule server
}

rule Start = {
	print "----scheduler init"
	counter := 0
	program(self) := Program
}

//-----------------------------------------------------------------------------------------------------------
//				begin scheduler main programm
//-----------------------------------------------------------------------------------------------------------

policy ClientSkip = skip

rule Program = seq
	//create new clients (Company and Employee) every 10th tick
	//if counter % 10 = 0 then seq
	
	//Repeat 4 times (the Client was created at initialization)
	if counter <= 4 then seq
		
		print "Perform transaciion Beetween a Company and an Employee"
	    //createASIM initializedBy InitCompany withProgram ProgramCompany andPolicy ClientSkip in temploc
	    //print " Initialize a Employe ASIM...."
	    //createASIM initializedBy InitEmployee withProgram ProgramEmployee andPolicy ClientSkip in temploc    
		//createASIM initializedBy InitClient withProgram ProgramClient andPolicy ClientSkip in temploc
	endseq
	

	//look into inbox if a client has been sent its message and could be destroyed
	choose m in inboxOf(self) with getMessageSubject(m)="Done" do seq
		clientName := getMessageSender(m)
		destroyASIM clientName
		print "client removed: " + clientName
		print "--------------------------------------------------------------------------"
	endseq
	counter := counter + 1
endseq



