CoreASIM scheduler

use Standard

init Start

scheduling whileRunning

// not yet clear how asim scheduling works
policy whileRunning = {
	schedule server
}

rule Start = {
	print "------------------scheduler init"
	counter := 0
	program(self) := Program
}

//-----------------------------------------------------------------------------------------------------------
//				begin scheduler main programm
//-----------------------------------------------------------------------------------------------------------
rule Program = seq
	//create new client every 10th tick
	if counter % 10 = 0 then seq
		createASIM initializedBy InitClient withProgram ProgramClient andPolicy ClientSkip in temploc
	endseq
	
	//look into inbox if a client has been sent its message and could be destroyed
	choose m in inboxOf(self) with getMessageSubject(m)="Done" do seq
		clientName := getMessageSender(m)
		destroyASIM clientName
		print "client removed: " + clientName
		print "--------------------------------------------------------------------------"
	endseq
	
	counter := counter + 1
endseq