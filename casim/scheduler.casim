CoreASIM scheduler

use Standard

init Start

controlled counter:INTEGER



scheduling whileRunning

policy whileRunning = {
	//schedule clientTest
	schedule server
	//schedule self
}

rule Start = {
	print "------------------scheduler init"
	counter := 0
	program(self) := Program
}

rule Program = seq
	//print "------------------tick: " + counter
	
	//create new client
	if counter % 10 = 0 then seq
		createASIM initializedBy InitClient withProgram ProgramClient andPolicy ClientSkip in temploc
	endseq
	
	choose m in inboxOf(self) with getMessageSubject(m)="Done" do seq
		print "--------------------------------------------------------------------------"
		clientName := getMessageSender(m)
		destroyASIM clientName
		print "client removed: " + clientName
		print "--------------------------------------------------------------------------"
	endseq
	
	counter := counter + 1
endseq

//-----------------------------------------------------------------------------------------------------------
//				begin client code
//-----------------------------------------------------------------------------------------------------------
policy ClientSkip = skip

rule InitClient = par
	print "------------------client init"
	sent := false
	done := false
endpar

rule ProgramClient = par
	if sent = true and done = false then par
		//"destroyASIM self" not working
		//destroyASIM <name> would work but I don't know how to determine the name of the current ASIM
		//=> send done message to scheduler which ends the asim by retrieving the sender name
		//also, strangely it is not working sending the "Done" right after sending the credit review request in bottom if statement
		send "Done" to "scheduler" with subject "Done"
		done := true
	endpar
	if sent = false then par
		send {
				"from" -> "client",
				"to" -> "somebody",
				"channel" -> "phone",
				"amount"  -> 2000,
				"custFlds" -> "Sent from Dynamic Client"
			}  to "server" with subject "CreditReviewRequest"
		sent := true
	endpar
endpar